}
}
}
}
osf_subfolder <- osfr::osf_mkdir(project, folder_name)
upload_folder(folder_path, osf_subfolder)
osf_subfolder
folder_path
upload_folder(folder_path, osf_subfolder)
upload_folder <- function(local_path, osf_node) {
# List all files and directories in the local path
items <- list.files(local_path, full.names = TRUE)
for (item in items) {
if (file.info(item)$isdir) {
# If the item is a directory, create a corresponding folder in OSF
folder_name <- basename(item)
print( paste("New Folder Created:", folder_name, collapse = "") )
osf_subfolder <- osfr::osf_mkdir(osf_node, folder_name)
# Recursively upload the subfolder
upload_folder(item, osf_subfolder)
} else {
# If the item is a file, check if it already exists in OSF
existing_files <- osfr::osf_ls_files(osf_node)
file_name <- basename(item)
if (file_name %in% existing_files$name) {
print(paste("    skipping", item, "as it already exists in OSF"))
} else {
print(paste("    uploading", item))
osf_upload(osf_node, item)
}
}
}
}
osf_subfolder <- osfr::osf_mkdir(project, folder_name)
upload_folder(folder_path, osf_subfolder)
upload_folder <- function(local_path, osf_node) {
# List all files and directories in the local path
items <- list.files(local_path, full.names = TRUE)
for (item in items) {
if (file.info(item)$isdir) {
# If the item is a directory, create a corresponding folder in OSF
folder_name <- basename(item)
print( paste("New Folder Created:", folder_name, collapse = "") )
osf_subfolder <- osfr::osf_mkdir(osf_node, folder_name)
# Recursively upload the subfolder
upload_folder(item, osf_subfolder)
} else {
# If the item is a file, check if it already exists in OSF
existing_files <- osfr::osf_ls_files(osf_node)
file_name <- basename(item)
if (file_name %in% existing_files$name) {
print(paste("    skipping", item, "as it already exists in OSF"))
} else {
print(paste("    uploading", item))
osf_upload(osf_node, item)
}
}
}
}
osf_subfolder <- osfr::osf_mkdir(project, folder_name)
upload_folder(folder_path, osf_subfolder)
upload_folder(folder_path, osf_subfolder)
library(httr)
library(jsonlite)
library(osfr)
osf_auth(token = "wyZXMS2hLIRmIi8mKOm6IIctbJX1ShBtdwdcFtQbMKX9gv58wQ2nncQjEHAXnjZF8iWeMt")
# Or access an existing project
project <- osf_retrieve_node("kgesy")
# Path to your local folder
folder_path <- "/Users/simonedambrogio/Downloads/main"
# List files in the folder
files <- list.files(folder_path, full.names = TRUE)
project
project %>%
osf_ls_files()
project %>%
osf_ls_files() %>%
filter(name == "main")
test = project %>% osf_ls_files()
test[7,:]
test[7,]
test %>% filter(name=="main")
test
main_node = project %>% osf_ls_files()
project_node = project %>% osf_ls_files()
main_node = project_node[7,]
main_node
project_node %>% filter(id == "669c0ede2acc4900b6fd857b")
project_node[project_node$id == "669c0ede2acc4900b6fd857b", ]
library(dplyr)
project_node %>% filter(id == "669c0ede2acc4900b6fd857b")
osf_subfolder <- osfr::osf_mkdir(project, folder_name) %>% filter(name=="main")
main_node = project %>% osf_ls_files() %>% filter(name=="main")
main_node = project %>%
osf_ls_files() %>%
filter(name=="main")
main_node %>%
osf_ls_files()
main_node %>%
osf_ls_files() %>%
filter(name=="Analysis Study")
main_node %>%
osf_ls_files() %>%
filter(name=="Analysis Study") %>%
osf_ls_files()
main_node %>% osf_ls_files() %>%
filter(name=="Analysis Study") %>% osf_ls_files() %>%
filter(name=="Analysis") %>% osf_ls_files()
main_node %>% osf_ls_files() %>%
filter(name=="Analysis Study") %>% osf_ls_files() %>%
filter(name=="Analysis") %>% osf_ls_files() %>%
filter(name=="index_files")
index_files_node = main_node %>% osf_ls_files() %>%
filter(name=="Analysis Study") %>% osf_ls_files() %>%
filter(name=="Analysis") %>% osf_ls_files() %>%
filter(name=="index_files")
index_files_node
main_node %>% osf_ls_files() %>%
filter(name=="Analysis Study") %>% osf_ls_files() %>%
filter(name=="Analysis") %>% osf_ls_files() %>%
filter(name=="index_files") %>% osf_ls_files() %>%
filter(name=="figure-html")
folder_path
# Path to your local folder
mainfolder_path <- "/Users/simonedambrogio/Downloads/main"
# List files in the folder
files <- list.files(mainfolder_path, full.names = TRUE)
files
# Local Directory ---
files <- list.files(folder_path, full.names = TRUE)
file.path(mainfolder_path, "Analysis Study", "Analysis", "index_files", "figure-html")
file.path(mainfolder_path, "Analysis Study", "Analysis", "index_files", "figure-html")
# Local Directory ---
file.path(mainfolder_path, "Analysis Study", "Analysis", "index_files", "figure-html") |>
list.files(full.names = TRUE)
# Local Directory ---
files <- file.path(mainfolder_path, "Analysis Study", "Analysis", "index_files", "figure-html") |>
list.files(folder_path, full.names = TRUE)
files
file.path(mainfolder_path, "Analysis Study", "Analysis", "index_files", "figure-html") |>
list.files(folder_path, full.names = TRUE)
# Local Directory ---
files <- file.path(mainfolder_path, "Analysis Study", "Analysis", "index_files", "figure-html") |>
list.files(full.names = TRUE)
files
for( item in files){
print(paste("    uploading", item))
osf_upload(index_files_node, item)
}
index_files_node
# OSF Directory ---
index_files_node = main_node %>% osf_ls_files() %>%
filter(name=="Analysis Study") %>% osf_ls_files() %>%
filter(name=="Analysis") %>% osf_ls_files() %>%
filter(name=="index_files") %>% osf_ls_files() %>%
filter(name=="figure-html")
index_files_node
# OSF Directory ---
index_files_node = main_node %>% osf_ls_files() %>%
filter(name=="Analysis Study") %>% osf_ls_files() %>%
filter(name=="Analysis") %>% osf_ls_files() %>%
filter(name=="index_files") %>% osf_ls_files() %>%
filter(name=="libs")
# Local Directory ---
files <- file.path(mainfolder_path, "Analysis Study", "Analysis", "index_files", "libs") |>
list.files(full.names = TRUE)
files
file.path(mainfolder_path, "Analysis Study", "Analysis", "index_files", "libs")
osf_upload
index_files_node
osf_upload(index_files_node, file.path(mainfolder_path, "Analysis Study", "Analysis", "index_files", "libs"))
?osf_upload
osf_upload(
x = index_files_node,
path = file.path(mainfolder_path, "Analysis Study", "Analysis", "index_files", "libs"),
recurse = TRUE,
verbose = TRUE
)
mainfolder_path
project
library(httr)
library(jsonlite)
library(osfr)
library(dplyr)
osf_auth(token = "wyZXMS2hLIRmIi8mKOm6IIctbJX1ShBtdwdcFtQbMKX9gv58wQ2nncQjEHAXnjZF8iWeMt")
# Or access an existing project
project <- osf_retrieve_node("kgesy")
# Path to your local folder
mainfolder_path <- "/Users/simonedambrogio/Downloads/main"
osf_upload(
x = project,
path = mainfolder_path,
recurse = TRUE,
verbose = TRUE
)
setwd("/Volumes/PROJECTS/Ongoing/simonedambrogio.github.io/vitae/CV")
rmarkdown::pandoc_available()
Sys.getenv("RSTUDIO_PANDOC")
library(vitae)
library(vitae)
library(dplyr)
library(purrr)
library(tibble)
tribble(
~ Degree, ~ Year, ~ Institution, ~ Where,
"PhD in Experimental Psychology", "2021-Today", "University of Oxford", "Oxford, UK",
"Visiting Graduate Scholar, Wharton Neuroscience Initiative", "2020", "University of Pennsylvania", "Philadelphia, Pennsylvania",
"M.Sc. in Applied Cognitive Psychology (Cum Laude)", "2017-2020", "University of Padua", "Padua, Italy",
"Erasmus + Program", "2018", "Leiden University", "Leiden, Netherlands",
"B.Sc. in Psychology (First class Honours)", "2017-2017", "University of Padua", "Padua, Italy",
) %>%
detailed_entries(Degree, Year, Institution, Where)
# Function to make your name bold in citations
format_author <- function(authors) {
authors %>%
mutate(
family = ifelse(family == "D'Ambrogio", paste0("\\textbf{", family, "}"), family),
given = ifelse(family == "\\textbf{D'Ambrogio}", paste0("\\textbf{", given, "}"), given)
)
}
bibliography_entries("packages.bib")
bibliography_entries("packages.bib")
format_author <- function(authors) {
authors %>%
mutate(
family = ifelse(family == "D'Ambrogio", paste0("\\textbf{", family, "}"), family),
given = ifelse(family == "\\textbf{D'Ambrogio}", paste0("\\textbf{", given, "}"), given)
)
}
bibliography_entries("packages.bib") %>%
mutate(author = map(author, format_author)) %>%
arrange(desc(author$family), issued)
format_author <- function(authors) {
authors %>%
mutate(
family = ifelse(family == "D'Ambrogio", paste0("\\textbf{", family, "}"), family),
given = ifelse(family == "\\textbf{D'Ambrogio}", paste0("\\textbf{", given, "}"), given)
)
}
bibliography_entries("packages.bib")
d <- bibliography_entries("packages.bib")
d$author
d$author[1]
d$author[1][1]
d$author[1][1][1]
d$author[[1]]
d$author[[1]][[1]]
str(d$author[[1]][[1]])
d$author
d$author[[1]]
d$author[[1]]
d$author[[1]]$family
name = d$author[[1]]
name
name = d$author[[1]][[1]]
name
name[1]
name$family
authors <- bibliography_entries("packages.bib")$author[[1]]
authors
d$author[[1]][[1]]
author <- authors[[1]]
author
author[1]
author$family
authors
ifelse(author$family=="D'Ambrogio", paste0("\\textbf{", family, "}"), family)
author <- authors[[1]]
ifelse(author$family=="D'Ambrogio", paste0("\\textbf{", author$family, "}"), author$family)
author <- authors[[4]]
ifelse(author$family=="D'Ambrogio", paste0("\\textbf{", author$family, "}"), author$family)
ifelse(author$family %in% c("D'Ambrogio", "D’Ambrogio"), paste0("\\textbf{", author$family, "}"), author$family)
author$given
d <- bibliography_entries("packages.bib")
authors <- bibliography_entries("packages.bib")$author[[1]]
author <- authors[[4]]
author$family <- ifelse(author$family %in% c("D'Ambrogio", "D’Ambrogio"), paste0("\\textbf{", author$family, "}"), author$family)
author$given <-  ifelse(author$given %in% c("D'Ambrogio", "D’Ambrogio"), paste0("\\textbf{", author$given, "}"), author$given)
author$given
author
f <- function(author){
author$family <- ifelse(author$family %in% c("D'Ambrogio", "D’Ambrogio"), paste0("\\textbf{", author$family, "}"), author$family)
author$given <-  ifelse(author$given %in% c("D'Ambrogio", "D’Ambrogio"), paste0("\\textbf{", author$given, "}"), author$given)
}
map(
authors, f
)
f <- function(author){
author$family <- ifelse(author$family %in% c("D'Ambrogio", "D’Ambrogio"), paste0("\\textbf{", author$family, "}"), author$family)
author$given <-  ifelse(author$given %in% c("D'Ambrogio", "D’Ambrogio"), paste0("\\textbf{", author$given, "}"), author$given)
author
}
return(author)
f <- function(author){
author$family <- ifelse(author$family %in% c("D'Ambrogio", "D’Ambrogio"), paste0("\\textbf{", author$family, "}"), author$family)
author$given <-  ifelse(author$given %in% c("D'Ambrogio", "D’Ambrogio"), paste0("\\textbf{", author$given, "}"), author$given)
return(author)
}
map(
authors, f
)
authors <- bibliography_entries("packages.bib")$author[[1]]
authors
map(
authors, f
)
?bibliography_entries
bibliography_entries
install.packages("citeproc")
library(vitae)
authors <- bibliography_entries("packages.bib")$author[[1]]
# To modify a csl_names object using proper CSL formatting
authors[4] <- csl_name(family = "Smith", given = "John")
csl_name(family = "Smith", given = "John")
# To modify a csl_names object using proper CSL formatting
authors[[4]] <- csl_name(family = "Smith", given = "John")
authors
author <- authors[[1]]
author
authors <- bibliography_entries("packages.bib")$author[[1]]
authors[[4]]
author$family %in% c("D'Ambrogio", "D’Ambrogio", "DAmbrogio", "dambrogio", "Dambrogio")
library(vitae)
authors <- bibliography_entries("packages.bib")$author[[1]]
for( i in 1:length(authors)){
isme <- authors[[i]]$family %in% c("D'Ambrogio", "D’Ambrogio", "DAmbrogio", "dambrogio", "Dambrogio")
isme <- author[[i]]$given %in% c("D'Ambrogio", "D’Ambrogio", "DAmbrogio", "dambrogio", "Dambrogio")
if(isme){
authors[[i]] <- vitae::csl_name(family="D'Ambrogio", given = "Simone")
}
}
library(vitae)
authors <- bibliography_entries("packages.bib")$author[[1]]
authors
i=1
authors[[i]]$family %in% c("D'Ambrogio", "D’Ambrogio", "DAmbrogio", "dambrogio", "Dambrogio")
authors[[i]]$family %in% c("D'Ambrogio", "D’Ambrogio", "DAmbrogio", "dambrogio", "Dambrogio") |
authors[i]]$given %in% c("D'Ambrogio", "D’Ambrogio", "DAmbrogio", "dambrogio", "Dambrogio")
authors[i]]$given
authors[[i]]$family %in% c("D'Ambrogio", "D’Ambrogio", "DAmbrogio", "dambrogio", "Dambrogio") |
authors[[i]]$given %in% c("D'Ambrogio", "D’Ambrogio", "DAmbrogio", "dambrogio", "Dambrogio")
authors <- bibliography_entries("packages.bib")$author[[1]]
for( i in 1:length(authors) ) {
isme <- authors[[i]]$family %in% c("D'Ambrogio", "D’Ambrogio", "DAmbrogio", "dambrogio", "Dambrogio") |
authors[[i]]$given %in% c("D'Ambrogio", "D’Ambrogio", "DAmbrogio", "dambrogio", "Dambrogio")
if(isme){
authors[[i]] <- vitae::csl_name(family="D'Ambrogio", given = "Simone")
}
}
authors <- bibliography_entries("packages.bib")$author[[1]]
i=7
authors
authors[[i]]
i=6
authors[[i]]
authors[[i]]$family
authors[[i]]$given
authors[[i]]$given %in% c("D'Ambrogio", "D’Ambrogio", "DAmbrogio", "dambrogio", "Dambrogio")
authors[[i]]$family %in% c("D'Ambrogio", "D’Ambrogio", "DAmbrogio", "dambrogio", "Dambrogio") |
authors[[i]]$given %in% c("D'Ambrogio", "D’Ambrogio", "DAmbrogio", "dambrogio", "Dambrogio")
names(authors[[i]])
attributes <- names(authors[[i]])
authors[[i]][attributes[1]]
authors[[i]]
authors[[i]][[attributes[1]]]
authors[[i]][[attribute]
authors[[i]][[attribute]]
authors[[i]]
isme <- FALSE
author <- authors[[i]]
attributes <- names(author)
map(attributes, function(attribute) author[[attribute]] )
name2bold <- c("D'Ambrogio", "D’Ambrogio", "DAmbrogio", "dambrogio", "Dambrogio")
authors <- bibliography_entries("packages.bib")$author[[1]]
name2bold <- c("D'Ambrogio", "D’Ambrogio", "DAmbrogio", "dambrogio", "Dambrogio")
for( i in 1:length(authors) ) {
isbold <- FALSE
author <- authors[[i]]
attributes <- names(author)
for( attribute in attributes ){
isbold <- isbold | authors[[attribute]] %in% name2bold
}
if(isbold){
authors[[i]] <- vitae::csl_name(family="D'Ambrogio", given = "Simone")
}
}
authors <- bibliography_entries("packages.bib")$author[[1]]
name2bold <- c("D'Ambrogio", "D’Ambrogio", "DAmbrogio", "dambrogio", "Dambrogio")
i+1
i=1
isbold <- FALSE
author <- authors[[i]]
attributes <- names(author)
attributes
author
isbold
for( attribute in attributes ){
isbold <- isbold | authors[[attribute]] %in% name2bold
}
isbold
isbold <- FALSE
author[[attribute]]
authors <- bibliography_entries("packages.bib")$author[[1]]
name2bold <- c("D'Ambrogio", "D’Ambrogio", "DAmbrogio", "dambrogio", "Dambrogio")
for( i in 1:length(authors) ) {
isbold <- FALSE
author <- authors[[i]]
attributes <- names(author)
for( attribute in attributes ){
isbold <- isbold | author[[attribute]] %in% name2bold
}
if(isbold){
authors[[i]] <- vitae::csl_name(family="D'Ambrogio", given = "Simone")
}
}
authors
library(vitae)
authors <- bibliography_entries("packages.bib")$author[[1]]
library(vitae)
authors <- bibliography_entries("packages.bib")$author[[1]]
make_bold <- function(authors, name2bold = c("D'Ambrogio", "D’Ambrogio", "DAmbrogio", "dambrogio", "Dambrogio")  ){
for( i in 1:length(authors) ) {
isbold <- FALSE
author <- authors[[i]]
attributes <- names(author)
for( attribute in attributes ){
isbold <- isbold | author[[attribute]] %in% name2bold
}
if(isbold){
authors[[i]] <- vitae::csl_name(family="\\textbf{D'Ambrogio}", given = "Simone")
}
}
return( authors )
}
make_bold(authors)
bibliography_entries("packages.bib") %>%
mutate(authors = make_bold(authors))
bibliography_entries("packages.bib")
bibliography_entries("packages.bib")
map( bibliography_entries("packages.bib"), function(i) print(i))
bibliography_entries("packages.bib")$authors
bibliography_entries("packages.bib")$author
bibliography_entries("packages.bib")$author[[1]]
map( bibliography_entries("packages.bib")$author, make_bold)
bibliography_entries("packages.bib")$author
lapply( bibliography_entries("packages.bib")$author, make_bold)
?list_of_csl_names
lapply( bibliography_entries("packages.bib")$author, make_bold) %>% list_of_csl_names
bibliography_entries("packages.bib")$author <- lapply(
bibliography_entries("packages.bib")$author, make_bold) %>%
list_of_csl_names
bibliography_entries("packages.bib")$author
bib <-  ography_entriesbibliography_entries("packages.bib")
bibliography_entries("packages.bib")
bib <- bibliography_entries("packages.bib")
lapply(
bib$author, make_bold) %>%
list_of_csl_names
lapply(
bib$author, make_bold) %>%
list_of_csl_names()
bib$author <- lapply(
bib$author, make_bold) %>%
list_of_csl_names()
bib
bib
tribble(
~ Year, ~ Conference,
"2021-Today", "University of Oxford",
)
tribble(
~ Year, ~ Conference,
"2021-Today", "University of Oxford",
) %>%
detailed_entries(Year, Conference)
options(tinytex.verbose = TRUE)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(vitae)
library(dplyr)
library(purrr)
tribble(
~`Coding Languages`, ~Software, ~Other,
"R -- Python -- SQL -- JavaScript",
"QGIS -- Earth Engine -- SAGA -- PostgreSQL -- ArcGIS -- GIMP",
"Git -- Markdown -- LaTex -- OpenStreetMap"
)
tribble(
~`Coding Languages`, ~Software, ~Other,
"R -- Python -- SQL -- JavaScript",
"QGIS -- Earth Engine -- SAGA -- PostgreSQL -- ArcGIS -- GIMP",
"Git -- Markdown -- LaTex -- OpenStreetMap"
) |>
kable(booktabs = T, align = 'c', escape = F, format = "latex") |>
kable_styling(full_width = F, font_size = 8, latex_options = "HOLD_position") |>
row_spec(0, bold = T, color = "#009acd") |>
row_spec(1, bold = F, color = "#7f7f7f") |>
column_spec(column = 1:3, width = '4.75cm')
library(kableExtra)
tribble(
~`Coding Languages`, ~Software, ~Other,
"R -- Python -- SQL -- JavaScript",
"QGIS -- Earth Engine -- SAGA -- PostgreSQL -- ArcGIS -- GIMP",
"Git -- Markdown -- LaTex -- OpenStreetMap"
) |>
kable(booktabs = F, align = 'c', escape = F, format = "latex", linesep = "") |>
kable_styling(full_width = F, font_size = 8,
latex_options = c("HOLD_position", "hide_border")) |>
row_spec(0, bold = T, color = "#009acd") |>
row_spec(1, bold = F, color = "#7f7f7f") |>
column_spec(column = 1:3, width = '4.75cm', border_right = F, border_left = F)
14.25cm/3
14.25/3

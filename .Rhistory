next #skip to next file
}
if (gzip_txt) { #gzip txt file if requested
system(paste("gzip", shQuote(output_fname)))
output_fname <- paste0(output_fname, ".gz")
}
txt_files[ff] <- output_fname
}
return(txt_files)
}
acq2txt("/Volumes/PROJECTS/Ongoing/Uncertainty/fMRI/Task/MRI/task/data/Physiological/p_12_s_2_7T-Physio-Template-200Hz.acq")
install.packages("httr")
install.packages("jsonlite")
install.packages("osfr")
install.packages("jsonlite")
library(httr)
library(jsonlite)
library(osfr)
library(jsonlite)
library(httr)
library(jsonlite)
library(osfr)
osf_auth(token = "wyZXMS2hLIRmIi8mKOm6IIctbJX1ShBtdwdcFtQbMKX9gv58wQ2nncQjEHAXnjZF8iWeMt")
# Or access an existing project
project <- osf_retrieve_node("kgesy")
View(project)
# Path to your local folder
folder_path <- "/Users/simonedambrogio/Downloads/Global-Mental-Accounting-main/Analysis Study/Analysis/index_files/libs"
# List files in the folder
files <- list.files(folder_path, full.names = TRUE)
files
# List files in the folder
files <- list.files(folder_path, full.names = TRUE)
project
# Upload each file
for (file in files) {
osf_upload(project, file)
}
new_folder <- osf_create_component(project, "New Folder")
# List all components (nodes) in the project
components <- osf_ls_nodes(project)
components
# Print the components to identify the one to delete
print(components)
# Assuming the component you want to delete is named "New Folder"
# Filter the component by name (or you can use its ID)
component_to_delete <- components[components$name == "New Folder", ]
# List all components (nodes) in the project
components <- osf_ls_nodes(project)
components
project
# List all components (nodes) in the project
components <- osf_ls_nodes(project)
project
View(project)
project$meta
# Path to your local folder
folder_path <- "/Users/simonedambrogio/Downloads/Data&Scripts"
# List files in the folder
files <- list.files(folder_path, full.names = TRUE)
files
folder_path
# Path to your local folder
folder_path <- "/Users/simonedambrogio/Downloads/Global-Mental-Accounting-main/Analysis Study/Analysis/index_files/libs"
# List files in the folder
files <- list.files(folder_path, full.names = TRUE)
files
# Path to your local folder
folder_path <- "/Users/simonedambrogio/Downloads/Global-Mental-Accounting-main/Analysis Study/Analysis/index_files/libs"
# List files in the folder
files <- list.files(folder_path, full.names = TRUE)
files
# Path to your local folder
folder_path <- "/Users/simonedambrogio/Downloads/Data&Scripts/Analysis Study/Analysis/index_files/libs"
# List files in the folder
files <- list.files(folder_path, full.names = TRUE)
files
# Path to your local folder
folder_path <- "/Users/simonedambrogio/Downloads/Data&Scripts/Analysis Study/Analysis/index_files"
# List files in the folder
files <- list.files(folder_path, full.names = TRUE)
files
upload_folder <- function(local_path, osf_node) {
# List all files and directories in the local path
items <- list.files(local_path, full.names = TRUE)
for (item in items) {
if (file.info(item)$isdir) {
# If the item is a directory, create a corresponding folder in OSF
folder_name <- basename(item)
osf_subfolder <- osf_create_component(osf_node, folder_name)
# Recursively upload the subfolder
upload_folder(item, osf_subfolder)
} else {
# If the item is a file, upload it
osf_upload(osf_node, item)
}
}
}
upload_folder <- function(local_path, osf_node) {
# List all files and directories in the local path
items <- list.files(local_path, full.names = TRUE)
for (item in items) {
if (file.info(item)$isdir) {
# If the item is a directory, create a corresponding folder in OSF
folder_name <- basename(item)
osf_subfolder <- osf_create_component(osf_node, folder_name)
# Recursively upload the subfolder
upload_folder(item, osf_subfolder)
} else {
# If the item is a file, upload it
osf_upload(osf_node, item)
}
}
}
upload_folder(folder_path, project)
# Function to create a folder in OSF
osf_create_folder <- function(parent_id, folder_name) {
url <- paste0("https://api.osf.io/v2/nodes/", parent_id, "/files/osfstorage/")
body <- list(
name = folder_name,
kind = "folder"
)
response <- POST(url, body = toJSON(body), add_headers(Authorization = paste("Bearer", osf_token)), encode = "json")
content(response)
}
project
osf_create_folder(project, "test")
osf_token
create_folder
osfr::create_folder()
osfr
library(osfr)
osfr::osf_mkdir
?osfr::osf_mkdir
osfr::osf_mkdir(project, "test")
osf_subfolder <- osfr::osf_mkdir(osf_node, folder_name)
upload_folder <- function(local_path, osf_node) {
# List all files and directories in the local path
items <- list.files(local_path, full.names = TRUE)
for (item in items) {
if (file.info(item)$isdir) {
# If the item is a directory, create a corresponding folder in OSF
folder_name <- basename(item)
osf_subfolder <- osfr::osf_mkdir(osf_node, folder_name)
# Recursively upload the subfolder
upload_folder(item, osf_subfolder)
} else {
# If the item is a file, upload it
osf_upload(osf_node, item)
}
}
}
folder_path
upload_folder(folder_path, project)
folder_path
upload_folder <- function(local_path, osf_node) {
# List all files and directories in the local path
items <- list.files(local_path, full.names = TRUE)
for (item in items) {
if (file.info(item)$isdir) {
# If the item is a directory, create a corresponding folder in OSF
folder_name <- basename(item)
print("Create ", folder_name, " ---------")
osf_subfolder <- osfr::osf_mkdir(osf_node, folder_name)
# Recursively upload the subfolder
upload_folder(item, osf_subfolder)
} else {
# If the item is a file, upload it
print("\tupload ", item)
osf_upload(osf_node, item)
}
}
}
upload_folder(folder_path, project)
folder_name
folder_name="test"
c("Create ", folder_name, " ---------")
paste(c("Create ", folder_name, " ---------"))
paste("Create ", folder_name, " ---------")
paste("Create ", folder_name, " ---------", collapse = "")
item="1"
print( paste("\tupload ", item, collapse = "") )
print( paste("    upload ", item, collapse = "") )
# If the item is a file, upload it
print( paste("    upload ", item, collapse = "") )
upload_folder <- function(local_path, osf_node) {
# List all files and directories in the local path
items <- list.files(local_path, full.names = TRUE)
for (item in items) {
if (file.info(item)$isdir) {
# If the item is a directory, create a corresponding folder in OSF
folder_name <- basename(item)
print( paste("Create ", folder_name, " ---------", collapse = "") )
osf_subfolder <- osfr::osf_mkdir(osf_node, folder_name)
# Recursively upload the subfolder
upload_folder(item, osf_subfolder)
} else {
# If the item is a file, upload it
print( paste("    upload ", item, collapse = "") )
osf_upload(osf_node, item)
}
}
}
upload_folder(folder_path, project)
upload_folder <- function(local_path, osf_node) {
# List all files and directories in the local path
items <- list.files(local_path, full.names = TRUE)
for (item in items) {
if (file.info(item)$isdir) {
# If the item is a directory, create a corresponding folder in OSF
folder_name <- basename(item)
print( paste("New Folder Created:", folder_name, collapse = "") )
osf_subfolder <- osfr::osf_mkdir(osf_node, folder_name)
# Recursively upload the subfolder
upload_folder(item, osf_subfolder)
} else {
# If the item is a file, upload it
print( paste("    upload", item, collapse = "") )
osf_upload(osf_node, item)
}
}
}
upload_folder(folder_path, project)
# Path to your local folder
folder_path <- "/Users/simonedambrogio/Downloads/main"
# List files in the folder
files <- list.files(folder_path, full.names = TRUE)
files
upload_folder <- function(local_path, osf_node) {
# List all files and directories in the local path
items <- list.files(local_path, full.names = TRUE)
for (item in items) {
if (file.info(item)$isdir) {
# If the item is a directory, create a corresponding folder in OSF
folder_name <- basename(item)
print( paste("New Folder Created:", folder_name, collapse = "") )
osf_subfolder <- osfr::osf_mkdir(osf_node, folder_name)
# Recursively upload the subfolder
upload_folder(item, osf_subfolder)
} else {
# If the item is a file, upload it
print( paste("    upload", item, collapse = "") )
osf_upload(osf_node, item)
}
}
}
upload_folder(folder_path, project)
project
folder_path
local_path =
upload_folder(folder_path, project)
local_path = folder_path
local_path
items <- list.files(local_path, full.names = TRUE)
items
local_path
list.files(local_path, full.names = TRUE)
items <- c( "/Users/simonedambrogio/Downloads/main", list.files(local_path, full.names = TRUE) )
items
for (item in items) {
if (file.info(item)$isdir) {
# If the item is a directory, create a corresponding folder in OSF
folder_name <- basename(item)
print( paste("New Folder Created:", folder_name, collapse = "") )
osf_subfolder <- osfr::osf_mkdir(osf_node, folder_name)
# Recursively upload the subfolder
upload_folder(item, osf_subfolder)
} else {
# If the item is a file, upload it
print( paste("    uploading", item, collapse = "") )
osf_upload(osf_node, item)
}
}
osf_node
osf_node = project
for (item in items) {
if (file.info(item)$isdir) {
# If the item is a directory, create a corresponding folder in OSF
folder_name <- basename(item)
print( paste("New Folder Created:", folder_name, collapse = "") )
osf_subfolder <- osfr::osf_mkdir(osf_node, folder_name)
# Recursively upload the subfolder
upload_folder(item, osf_subfolder)
} else {
# If the item is a file, upload it
print( paste("    uploading", item, collapse = "") )
osf_upload(osf_node, item)
}
}
osf_subfolder <- osfr::osf_mkdir(project, folder_name)
osf_subfolder
folder_path
upload_folder(folder_path, osf_subfolder)
# If the item is a file, check if it already exists in OSF
existing_files <- osfr::osf_ls_files(osf_node)
existing_files
upload_folder <- function(local_path, osf_node) {
# List all files and directories in the local path
items <- c( "/Users/simonedambrogio/Downloads/main", list.files(local_path, full.names = TRUE) )
for (item in items) {
if (file.info(item)$isdir) {
# If the item is a directory, create a corresponding folder in OSF
folder_name <- basename(item)
print( paste("New Folder Created:", folder_name, collapse = "") )
osf_subfolder <- osfr::osf_mkdir(osf_node, folder_name)
# Recursively upload the subfolder
upload_folder(item, osf_subfolder)
} else {
# If the item is a file, check if it already exists in OSF
existing_files <- osfr::osf_ls_files(osf_node)
file_name <- basename(item)
if (file_name %in% existing_files$name) {
print(paste("    skipping", item, "as it already exists in OSF"))
} else {
print(paste("    uploading", item))
osf_upload(osf_node, item)
}
}
}
}
osf_subfolder <- osfr::osf_mkdir(project, folder_name)
upload_folder(folder_path, osf_subfolder)
osf_subfolder
folder_path
upload_folder(folder_path, osf_subfolder)
upload_folder <- function(local_path, osf_node) {
# List all files and directories in the local path
items <- list.files(local_path, full.names = TRUE)
for (item in items) {
if (file.info(item)$isdir) {
# If the item is a directory, create a corresponding folder in OSF
folder_name <- basename(item)
print( paste("New Folder Created:", folder_name, collapse = "") )
osf_subfolder <- osfr::osf_mkdir(osf_node, folder_name)
# Recursively upload the subfolder
upload_folder(item, osf_subfolder)
} else {
# If the item is a file, check if it already exists in OSF
existing_files <- osfr::osf_ls_files(osf_node)
file_name <- basename(item)
if (file_name %in% existing_files$name) {
print(paste("    skipping", item, "as it already exists in OSF"))
} else {
print(paste("    uploading", item))
osf_upload(osf_node, item)
}
}
}
}
osf_subfolder <- osfr::osf_mkdir(project, folder_name)
upload_folder(folder_path, osf_subfolder)
upload_folder <- function(local_path, osf_node) {
# List all files and directories in the local path
items <- list.files(local_path, full.names = TRUE)
for (item in items) {
if (file.info(item)$isdir) {
# If the item is a directory, create a corresponding folder in OSF
folder_name <- basename(item)
print( paste("New Folder Created:", folder_name, collapse = "") )
osf_subfolder <- osfr::osf_mkdir(osf_node, folder_name)
# Recursively upload the subfolder
upload_folder(item, osf_subfolder)
} else {
# If the item is a file, check if it already exists in OSF
existing_files <- osfr::osf_ls_files(osf_node)
file_name <- basename(item)
if (file_name %in% existing_files$name) {
print(paste("    skipping", item, "as it already exists in OSF"))
} else {
print(paste("    uploading", item))
osf_upload(osf_node, item)
}
}
}
}
osf_subfolder <- osfr::osf_mkdir(project, folder_name)
upload_folder(folder_path, osf_subfolder)
upload_folder(folder_path, osf_subfolder)
library(httr)
library(jsonlite)
library(osfr)
osf_auth(token = "wyZXMS2hLIRmIi8mKOm6IIctbJX1ShBtdwdcFtQbMKX9gv58wQ2nncQjEHAXnjZF8iWeMt")
# Or access an existing project
project <- osf_retrieve_node("kgesy")
# Path to your local folder
folder_path <- "/Users/simonedambrogio/Downloads/main"
# List files in the folder
files <- list.files(folder_path, full.names = TRUE)
project
project %>%
osf_ls_files()
project %>%
osf_ls_files() %>%
filter(name == "main")
test = project %>% osf_ls_files()
test[7,:]
test[7,]
test %>% filter(name=="main")
test
main_node = project %>% osf_ls_files()
project_node = project %>% osf_ls_files()
main_node = project_node[7,]
main_node
project_node %>% filter(id == "669c0ede2acc4900b6fd857b")
project_node[project_node$id == "669c0ede2acc4900b6fd857b", ]
library(dplyr)
project_node %>% filter(id == "669c0ede2acc4900b6fd857b")
osf_subfolder <- osfr::osf_mkdir(project, folder_name) %>% filter(name=="main")
main_node = project %>% osf_ls_files() %>% filter(name=="main")
main_node = project %>%
osf_ls_files() %>%
filter(name=="main")
main_node %>%
osf_ls_files()
main_node %>%
osf_ls_files() %>%
filter(name=="Analysis Study")
main_node %>%
osf_ls_files() %>%
filter(name=="Analysis Study") %>%
osf_ls_files()
main_node %>% osf_ls_files() %>%
filter(name=="Analysis Study") %>% osf_ls_files() %>%
filter(name=="Analysis") %>% osf_ls_files()
main_node %>% osf_ls_files() %>%
filter(name=="Analysis Study") %>% osf_ls_files() %>%
filter(name=="Analysis") %>% osf_ls_files() %>%
filter(name=="index_files")
index_files_node = main_node %>% osf_ls_files() %>%
filter(name=="Analysis Study") %>% osf_ls_files() %>%
filter(name=="Analysis") %>% osf_ls_files() %>%
filter(name=="index_files")
index_files_node
main_node %>% osf_ls_files() %>%
filter(name=="Analysis Study") %>% osf_ls_files() %>%
filter(name=="Analysis") %>% osf_ls_files() %>%
filter(name=="index_files") %>% osf_ls_files() %>%
filter(name=="figure-html")
folder_path
# Path to your local folder
mainfolder_path <- "/Users/simonedambrogio/Downloads/main"
# List files in the folder
files <- list.files(mainfolder_path, full.names = TRUE)
files
# Local Directory ---
files <- list.files(folder_path, full.names = TRUE)
file.path(mainfolder_path, "Analysis Study", "Analysis", "index_files", "figure-html")
file.path(mainfolder_path, "Analysis Study", "Analysis", "index_files", "figure-html")
# Local Directory ---
file.path(mainfolder_path, "Analysis Study", "Analysis", "index_files", "figure-html") |>
list.files(full.names = TRUE)
# Local Directory ---
files <- file.path(mainfolder_path, "Analysis Study", "Analysis", "index_files", "figure-html") |>
list.files(folder_path, full.names = TRUE)
files
file.path(mainfolder_path, "Analysis Study", "Analysis", "index_files", "figure-html") |>
list.files(folder_path, full.names = TRUE)
# Local Directory ---
files <- file.path(mainfolder_path, "Analysis Study", "Analysis", "index_files", "figure-html") |>
list.files(full.names = TRUE)
files
for( item in files){
print(paste("    uploading", item))
osf_upload(index_files_node, item)
}
index_files_node
# OSF Directory ---
index_files_node = main_node %>% osf_ls_files() %>%
filter(name=="Analysis Study") %>% osf_ls_files() %>%
filter(name=="Analysis") %>% osf_ls_files() %>%
filter(name=="index_files") %>% osf_ls_files() %>%
filter(name=="figure-html")
index_files_node
# OSF Directory ---
index_files_node = main_node %>% osf_ls_files() %>%
filter(name=="Analysis Study") %>% osf_ls_files() %>%
filter(name=="Analysis") %>% osf_ls_files() %>%
filter(name=="index_files") %>% osf_ls_files() %>%
filter(name=="libs")
# Local Directory ---
files <- file.path(mainfolder_path, "Analysis Study", "Analysis", "index_files", "libs") |>
list.files(full.names = TRUE)
files
file.path(mainfolder_path, "Analysis Study", "Analysis", "index_files", "libs")
osf_upload
index_files_node
osf_upload(index_files_node, file.path(mainfolder_path, "Analysis Study", "Analysis", "index_files", "libs"))
?osf_upload
osf_upload(
x = index_files_node,
path = file.path(mainfolder_path, "Analysis Study", "Analysis", "index_files", "libs"),
recurse = TRUE,
verbose = TRUE
)
mainfolder_path
project
library(httr)
library(jsonlite)
library(osfr)
library(dplyr)
osf_auth(token = "wyZXMS2hLIRmIi8mKOm6IIctbJX1ShBtdwdcFtQbMKX9gv58wQ2nncQjEHAXnjZF8iWeMt")
# Or access an existing project
project <- osf_retrieve_node("kgesy")
# Path to your local folder
mainfolder_path <- "/Users/simonedambrogio/Downloads/main"
osf_upload(
x = project,
path = mainfolder_path,
recurse = TRUE,
verbose = TRUE
)
setwd("/Volumes/PROJECTS/Ongoing/simonedambrogio.github.io/vitae/CV")
